
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ATTRIBUTION BITWISEAND BITWISENOT BITWISEOR BITWISEXOR BREAK CHAR CHARCONST COMMA CONTINUE DECREMENT DEFINE DIVIDE DO DOT ELSE EQUALTO FLOAT FLOATCONST FOR GREATEREQUAL GREATERTHEN ID IF INCLUDE INCLUDECONTENT INCREMENT INT INTEGERCONST LEFTBRACES LEFTPAREN LEFTSHIFT LESSEQUAL LESSTHEN LOGICALAND LOGICALNOT LOGICALOR MAIN MINUS MODULE NOTEQUAL PLUS POINTER RETURN RIGHTBRACES RIGHTPAREN RIGHTSHIFT SEMICOLON STRING STRUCT TIMES TYPEDEF VOID WHILEinicial : declaracoes_funcdeclaracoes_func : tipos func_name LEFTPAREN declaracao_parametros RIGHTPAREN contexto SEMICOLON declaracoes_func\n                            | emptyfunc_name : ID\n                    | MAINtipos : INT \n                | CHAR \n                | FLOAT\n                | VOID\n                | STRINGdeclaracao_parametros : tipos ID\n                    | tipos ID COMMA declaracao_parametros\n                    | emptycontexto : LEFTBRACES conteudo RIGHTBRACES\n                    | LEFTBRACES conteudo retorno RIGHTBRACESretorno : RETURN valor SEMICOLON\n                    | RETURN SEMICOLONempty :conteudo : declaracoes conteudo\n                    | comandos conteudo\n                    | emptydeclaracoes : tipos definicoes SEMICOLONdefinicoes : ID SEMICOLON\n                    | ID ATTRIBUTION valor\n                    | ID COMMA definicoes\n                    | ID ATTRIBUTION valor COMMA definicoesvalor : INTEGERCONST\n                | FLOATCONST\n                | STRING\n                | CHARCONST\n                | IDcomandos : atribuicao SEMICOLON\n                    | loop\n                    | condicional SEMICOLON\n                    | func_call SEMICOLON\n                    | palavra_reservada SEMICOLONatribuicao : ID ATTRIBUTION valorloop : while\n                | forwhile : WHILE LEFTPAREN condicao RIGHTPAREN contextofor : FOR LEFTPAREN tipos ID SEMICOLON condicao SEMICOLON atribuicao RIGHTPAREN contexto\n                | FOR LEFTPAREN tipos ID ATTRIBUTION valor SEMICOLON condicao SEMICOLON atribuicao RIGHTPAREN contextocondicional : IF LEFTPAREN condicao RIGHTPAREN contexto\n                        | IF LEFTPAREN condicao RIGHTPAREN contexto ELSE contextocondicao : valor comparador valor\n                    | LEFTPAREN condicao RIGHTPAREN\n                    | condicao comparador condicaocomparador : EQUALTO\n                    | LESSTHEN\n                    | GREATERTHEN\n                    | LESSEQUAL\n                    | GREATEREQUAL\n                    | NOTEQUAL\n                    | LOGICALAND\n                    | LOGICALOR\n                    | LOGICALNOTfunc_call : ID LEFTPAREN parametros_chamada RIGHTPARENparametros_chamada : valor\n                            | ID\n                            | valor COMMA parametros_chamada\n                            | emptypalavra_reservada : BREAK\n                            | CONTINUE'
    
_lr_action_items = {'INT':([0,13,19,21,23,25,26,30,35,36,43,50,51,52,53,58,59,67,107,122,125,],[5,5,5,5,5,5,5,-33,-38,-39,-14,-32,-34,-35,-36,5,-15,-22,-40,-41,-42,]),'CHAR':([0,13,19,21,23,25,26,30,35,36,43,50,51,52,53,58,59,67,107,122,125,],[6,6,6,6,6,6,6,-33,-38,-39,-14,-32,-34,-35,-36,6,-15,-22,-40,-41,-42,]),'FLOAT':([0,13,19,21,23,25,26,30,35,36,43,50,51,52,53,58,59,67,107,122,125,],[7,7,7,7,7,7,7,-33,-38,-39,-14,-32,-34,-35,-36,7,-15,-22,-40,-41,-42,]),'VOID':([0,13,19,21,23,25,26,30,35,36,43,50,51,52,53,58,59,67,107,122,125,],[8,8,8,8,8,8,8,-33,-38,-39,-14,-32,-34,-35,-36,8,-15,-22,-40,-41,-42,]),'STRING':([0,13,19,21,23,25,26,30,35,36,43,45,50,51,52,53,54,55,56,57,58,59,67,69,76,85,88,89,90,91,92,93,94,95,96,97,98,107,108,109,116,122,125,],[9,9,9,9,9,9,9,-33,-38,-39,-14,64,-32,-34,-35,-36,64,64,64,64,9,-15,-22,64,64,64,64,-48,-49,-50,-51,-52,-53,-54,-55,-56,64,-40,64,64,64,-41,-42,]),'$end':([0,1,2,4,23,42,],[-18,0,-1,-3,-18,-2,]),'ID':([3,5,6,7,8,9,14,21,25,26,28,30,35,36,43,45,50,51,52,53,54,55,56,57,59,67,69,70,76,80,85,88,89,90,91,92,93,94,95,96,97,98,101,107,108,109,115,116,121,122,125,],[11,-6,-7,-8,-9,-10,17,34,34,34,49,-33,-38,-39,-14,66,-32,-34,-35,-36,66,72,66,66,-15,-22,66,49,66,100,72,66,-48,-49,-50,-51,-52,-53,-54,-55,-56,66,49,-40,66,66,117,66,117,-41,-42,]),'MAIN':([3,5,6,7,8,9,],[12,-6,-7,-8,-9,-10,]),'LEFTPAREN':([10,11,12,34,37,40,41,56,57,76,88,89,90,91,92,93,94,95,96,97,108,116,],[13,-4,-5,55,56,57,58,76,76,76,76,-48,-49,-50,-51,-52,-53,-54,-55,-56,76,76,]),'RIGHTPAREN':([13,15,16,17,19,22,55,62,63,64,65,66,71,72,73,74,75,77,79,85,86,102,103,105,106,118,123,],[-18,18,-13,-11,-18,-12,-18,-27,-28,-29,-30,-31,-37,-31,84,-58,-61,87,99,-18,103,-60,-46,-47,-45,120,124,]),'COMMA':([17,49,62,63,64,65,66,72,74,82,],[19,70,-27,-28,-29,-30,-31,-31,85,101,]),'LEFTBRACES':([18,87,99,111,120,124,],[21,21,21,21,21,21,]),'SEMICOLON':([20,29,31,32,33,38,39,43,45,48,49,59,60,62,63,64,65,66,68,71,82,83,84,100,103,104,105,106,110,112,113,114,119,],[23,50,51,52,53,-62,-63,-14,61,67,68,-15,81,-27,-28,-29,-30,-31,-23,-37,-24,-25,-57,108,-46,-43,-47,-45,-26,115,116,-44,121,]),'RIGHTBRACES':([21,24,25,26,27,30,35,36,43,44,46,47,50,51,52,53,59,61,67,81,107,122,125,],[-18,43,-18,-18,-21,-33,-38,-39,-14,59,-19,-20,-32,-34,-35,-36,-15,-17,-22,-16,-40,-41,-42,]),'RETURN':([21,24,25,26,27,30,35,36,43,46,47,50,51,52,53,59,67,107,122,125,],[-18,45,-18,-18,-21,-33,-38,-39,-14,-19,-20,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'IF':([21,25,26,30,35,36,43,50,51,52,53,59,67,107,122,125,],[37,37,37,-33,-38,-39,-14,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'BREAK':([21,25,26,30,35,36,43,50,51,52,53,59,67,107,122,125,],[38,38,38,-33,-38,-39,-14,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'CONTINUE':([21,25,26,30,35,36,43,50,51,52,53,59,67,107,122,125,],[39,39,39,-33,-38,-39,-14,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'WHILE':([21,25,26,30,35,36,43,50,51,52,53,59,67,107,122,125,],[40,40,40,-33,-38,-39,-14,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'FOR':([21,25,26,30,35,36,43,50,51,52,53,59,67,107,122,125,],[41,41,41,-33,-38,-39,-14,-32,-34,-35,-36,-15,-22,-40,-41,-42,]),'ATTRIBUTION':([34,49,100,117,],[54,69,109,54,]),'ELSE':([43,59,104,],[-14,-15,111,]),'INTEGERCONST':([45,54,55,56,57,69,76,85,88,89,90,91,92,93,94,95,96,97,98,108,109,116,],[62,62,62,62,62,62,62,62,62,-48,-49,-50,-51,-52,-53,-54,-55,-56,62,62,62,62,]),'FLOATCONST':([45,54,55,56,57,69,76,85,88,89,90,91,92,93,94,95,96,97,98,108,109,116,],[63,63,63,63,63,63,63,63,63,-48,-49,-50,-51,-52,-53,-54,-55,-56,63,63,63,63,]),'CHARCONST':([45,54,55,56,57,69,76,85,88,89,90,91,92,93,94,95,96,97,98,108,109,116,],[65,65,65,65,65,65,65,65,65,-48,-49,-50,-51,-52,-53,-54,-55,-56,65,65,65,65,]),'EQUALTO':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,89,89,89,89,-46,89,-45,89,89,]),'LESSTHEN':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,90,90,90,90,-46,90,-45,90,90,]),'GREATERTHEN':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,91,91,91,91,-46,91,-45,91,91,]),'LESSEQUAL':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,92,92,92,92,-46,92,-45,92,92,]),'GREATEREQUAL':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,93,93,93,93,-46,93,-45,93,93,]),'NOTEQUAL':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,94,94,94,94,-46,94,-45,94,94,]),'LOGICALAND':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,95,95,95,95,-46,95,-45,95,95,]),'LOGICALOR':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,96,96,96,96,-46,96,-45,96,96,]),'LOGICALNOT':([62,63,64,65,66,77,78,79,86,103,105,106,112,119,],[-27,-28,-29,-30,-31,97,97,97,97,-46,97,-45,97,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicial':([0,],[1,]),'declaracoes_func':([0,23,],[2,42,]),'tipos':([0,13,19,21,23,25,26,58,],[3,14,14,28,3,28,28,80,]),'empty':([0,13,19,21,23,25,26,55,85,],[4,16,16,27,4,27,27,75,75,]),'func_name':([3,],[10,]),'declaracao_parametros':([13,19,],[15,22,]),'contexto':([18,87,99,111,120,124,],[20,104,107,114,122,125,]),'conteudo':([21,25,26,],[24,46,47,]),'declaracoes':([21,25,26,],[25,25,25,]),'comandos':([21,25,26,],[26,26,26,]),'atribuicao':([21,25,26,115,121,],[29,29,29,118,123,]),'loop':([21,25,26,],[30,30,30,]),'condicional':([21,25,26,],[31,31,31,]),'func_call':([21,25,26,],[32,32,32,]),'palavra_reservada':([21,25,26,],[33,33,33,]),'while':([21,25,26,],[35,35,35,]),'for':([21,25,26,],[36,36,36,]),'retorno':([24,],[44,]),'definicoes':([28,70,101,],[48,83,110,]),'valor':([45,54,55,56,57,69,76,85,88,98,108,109,116,],[60,71,74,78,78,82,78,74,78,106,78,113,78,]),'parametros_chamada':([55,85,],[73,102,]),'condicao':([56,57,76,88,108,116,],[77,79,86,105,112,119,]),'comparador':([77,78,79,86,105,112,119,],[88,98,88,88,88,88,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicial","S'",1,None,None,None),
  ('inicial -> declaracoes_func','inicial',1,'p_inicial','syntaxer.py',5),
  ('declaracoes_func -> tipos func_name LEFTPAREN declaracao_parametros RIGHTPAREN contexto SEMICOLON declaracoes_func','declaracoes_func',8,'p_declaracoes_func','syntaxer.py',13),
  ('declaracoes_func -> empty','declaracoes_func',1,'p_declaracoes_func','syntaxer.py',14),
  ('func_name -> ID','func_name',1,'p_func_name','syntaxer.py',24),
  ('func_name -> MAIN','func_name',1,'p_func_name','syntaxer.py',25),
  ('tipos -> INT','tipos',1,'p_tipos','syntaxer.py',33),
  ('tipos -> CHAR','tipos',1,'p_tipos','syntaxer.py',34),
  ('tipos -> FLOAT','tipos',1,'p_tipos','syntaxer.py',35),
  ('tipos -> VOID','tipos',1,'p_tipos','syntaxer.py',36),
  ('tipos -> STRING','tipos',1,'p_tipos','syntaxer.py',37),
  ('declaracao_parametros -> tipos ID','declaracao_parametros',2,'p_declaracao_parametros','syntaxer.py',41),
  ('declaracao_parametros -> tipos ID COMMA declaracao_parametros','declaracao_parametros',4,'p_declaracao_parametros','syntaxer.py',42),
  ('declaracao_parametros -> empty','declaracao_parametros',1,'p_declaracao_parametros','syntaxer.py',43),
  ('contexto -> LEFTBRACES conteudo RIGHTBRACES','contexto',3,'p_contexto','syntaxer.py',48),
  ('contexto -> LEFTBRACES conteudo retorno RIGHTBRACES','contexto',4,'p_contexto','syntaxer.py',49),
  ('retorno -> RETURN valor SEMICOLON','retorno',3,'p_retorno','syntaxer.py',54),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','syntaxer.py',55),
  ('empty -> <empty>','empty',0,'p_empty','syntaxer.py',63),
  ('conteudo -> declaracoes conteudo','conteudo',2,'p_conteudo','syntaxer.py',67),
  ('conteudo -> comandos conteudo','conteudo',2,'p_conteudo','syntaxer.py',68),
  ('conteudo -> empty','conteudo',1,'p_conteudo','syntaxer.py',69),
  ('declaracoes -> tipos definicoes SEMICOLON','declaracoes',3,'p_declaracoes','syntaxer.py',77),
  ('definicoes -> ID SEMICOLON','definicoes',2,'p_definicoes','syntaxer.py',81),
  ('definicoes -> ID ATTRIBUTION valor','definicoes',3,'p_definicoes','syntaxer.py',82),
  ('definicoes -> ID COMMA definicoes','definicoes',3,'p_definicoes','syntaxer.py',83),
  ('definicoes -> ID ATTRIBUTION valor COMMA definicoes','definicoes',5,'p_definicoes','syntaxer.py',84),
  ('valor -> INTEGERCONST','valor',1,'p_valor','syntaxer.py',89),
  ('valor -> FLOATCONST','valor',1,'p_valor','syntaxer.py',90),
  ('valor -> STRING','valor',1,'p_valor','syntaxer.py',91),
  ('valor -> CHARCONST','valor',1,'p_valor','syntaxer.py',92),
  ('valor -> ID','valor',1,'p_valor','syntaxer.py',93),
  ('comandos -> atribuicao SEMICOLON','comandos',2,'p_comandos','syntaxer.py',97),
  ('comandos -> loop','comandos',1,'p_comandos','syntaxer.py',98),
  ('comandos -> condicional SEMICOLON','comandos',2,'p_comandos','syntaxer.py',99),
  ('comandos -> func_call SEMICOLON','comandos',2,'p_comandos','syntaxer.py',100),
  ('comandos -> palavra_reservada SEMICOLON','comandos',2,'p_comandos','syntaxer.py',101),
  ('atribuicao -> ID ATTRIBUTION valor','atribuicao',3,'p_atribuicao','syntaxer.py',106),
  ('loop -> while','loop',1,'p_loop','syntaxer.py',110),
  ('loop -> for','loop',1,'p_loop','syntaxer.py',111),
  ('while -> WHILE LEFTPAREN condicao RIGHTPAREN contexto','while',5,'p_while','syntaxer.py',116),
  ('for -> FOR LEFTPAREN tipos ID SEMICOLON condicao SEMICOLON atribuicao RIGHTPAREN contexto','for',10,'p_for','syntaxer.py',121),
  ('for -> FOR LEFTPAREN tipos ID ATTRIBUTION valor SEMICOLON condicao SEMICOLON atribuicao RIGHTPAREN contexto','for',12,'p_for','syntaxer.py',122),
  ('condicional -> IF LEFTPAREN condicao RIGHTPAREN contexto','condicional',5,'p_condicional','syntaxer.py',126),
  ('condicional -> IF LEFTPAREN condicao RIGHTPAREN contexto ELSE contexto','condicional',7,'p_condicional','syntaxer.py',127),
  ('condicao -> valor comparador valor','condicao',3,'p_condicao','syntaxer.py',131),
  ('condicao -> LEFTPAREN condicao RIGHTPAREN','condicao',3,'p_condicao','syntaxer.py',132),
  ('condicao -> condicao comparador condicao','condicao',3,'p_condicao','syntaxer.py',133),
  ('comparador -> EQUALTO','comparador',1,'p_comparador','syntaxer.py',137),
  ('comparador -> LESSTHEN','comparador',1,'p_comparador','syntaxer.py',138),
  ('comparador -> GREATERTHEN','comparador',1,'p_comparador','syntaxer.py',139),
  ('comparador -> LESSEQUAL','comparador',1,'p_comparador','syntaxer.py',140),
  ('comparador -> GREATEREQUAL','comparador',1,'p_comparador','syntaxer.py',141),
  ('comparador -> NOTEQUAL','comparador',1,'p_comparador','syntaxer.py',142),
  ('comparador -> LOGICALAND','comparador',1,'p_comparador','syntaxer.py',143),
  ('comparador -> LOGICALOR','comparador',1,'p_comparador','syntaxer.py',144),
  ('comparador -> LOGICALNOT','comparador',1,'p_comparador','syntaxer.py',145),
  ('func_call -> ID LEFTPAREN parametros_chamada RIGHTPAREN','func_call',4,'p_func_call','syntaxer.py',149),
  ('parametros_chamada -> valor','parametros_chamada',1,'p_parametros_chamada','syntaxer.py',154),
  ('parametros_chamada -> ID','parametros_chamada',1,'p_parametros_chamada','syntaxer.py',155),
  ('parametros_chamada -> valor COMMA parametros_chamada','parametros_chamada',3,'p_parametros_chamada','syntaxer.py',156),
  ('parametros_chamada -> empty','parametros_chamada',1,'p_parametros_chamada','syntaxer.py',157),
  ('palavra_reservada -> BREAK','palavra_reservada',1,'p_palavra_reservada','syntaxer.py',161),
  ('palavra_reservada -> CONTINUE','palavra_reservada',1,'p_palavra_reservada','syntaxer.py',162),
]
